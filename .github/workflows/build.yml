name: Build Executable

on:
  push:
    branches:
      - build

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install Dependencies
        run: python -m pip install -r app/requirements.txt

      - name: Build Executable
        run: |
          cd app/
          pyinstaller -F main.py --distpath=../dist/win --icon=../build/icon.ico --version-file=../build/version.txt
          cd ..
          tar -czvf dist-win.tar.gz dist/win

      # - name: Create Release
      #   id: create_release
      #   # uses: actions/create-release@v1
      #   uses: ./.github/workflows/modules/deploy_release/
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: v0.0.1
      #     release_name: Release 0.0.1
      #     body_path: ./build/release_notes.txt
      #     draft: true
      #     prerelease: true
  
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}  # Get the upload URL from the create release step
      #     asset_path: dist.tar.gz  # Path to the built executable
      #     asset_name: WineCataloger.tar.gz  # Name of the asset in the release
      #     asset_content_type: application/octet-stream

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-win
          path: dist-win.tar.gz

  build_mac:
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install Dependencies
        run: pip install pyinstaller

      - name: Build Executable
        run: |
          cd app/
          pyinstaller -F main.py --distpath=../dist/macos --icon=../build/icon.ico --version-file=../build/version.txt
          cd ..
          tar -czvf dist-macos.tar.gz dist/macos

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-macos
          path: dist-macos.tar.gz

      # - name: Create Release
      #   id: create_release
      #   # uses: actions/create-release@v1
      #   uses: ./.github/workflows/modules/deploy_release/
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: v0.0.1
      #     release_name: Release 0.0.1
      #     body_path: ./build/release_notes.txt
      #     draft: true
      #     prerelease: true


      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}  # Get the upload URL from the create release step
      #     asset_path: dist.tar.gz  # Path to the built executable
      #     asset_name: WineCataloger.tar.gz  # Name of the asset in the release
      #     asset_content_type: application/octet-stream


  create_release:
    runs-on: ubuntu-latest
    needs: [build, build_mac]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-win

      - name: Download macOS Artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-macos

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: v0.0.1
      #     release_name: Release 0.0.1
      #     body_path: ./build/release_notes.txt
      #     draft: true
      #     prerelease: true

      - name: Create Release
        id: create_release
        # uses: actions/create-release@v1
        uses: ./.github/workflows/modules/deploy_release/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v0.0.1
          release_name: Release 0.0.1
          body_path: ./build/release_notes.txt
          draft: true
          prerelease: true

      - name: Upload Windows Release Asset
        id: upload-windows-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist-win.tar.gz
          asset_name: Lintor-Windows.tar.gz
          asset_content_type: application/octet-stream

      - name: Upload macOS Release Asset
        id: upload-macos-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist-macos.tar.gz
          asset_name: Lintor-macOS.tar.gz
          asset_content_type: application/octet-stream